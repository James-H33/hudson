From 24826f3b4e5e932344bb660144ecf2bb41ca273a Mon Sep 17 00:00:00 2001
From: Xiao-Long Chen <chenxiaolong@cxl.epac.to>
Date: Mon, 26 Aug 2013 22:26:34 -0400
Subject: [PATCH] Add preferences for high touch sensitivity

Change-Id: I07d7f316d6d6e2679dbb12224ebfe0f3ac815150
---
 res/xml/display_settings.xml                  |  6 ++++++
 src/com/android/settings/DisplaySettings.java | 30 +++++++++++++++++++++++++++
 2 files changed, 36 insertions(+)

diff --git a/res/xml/display_settings.xml b/res/xml/display_settings.xml
index a7bffc9..34b3920 100644
--- a/res/xml/display_settings.xml
+++ b/res/xml/display_settings.xml
@@ -69,6 +69,12 @@
             android:defaultValue="true" />
 
         <CheckBoxPreference
+            android:key="auto_adjust_touch"
+            android:title="@string/auto_adjust_touch_title"
+            android:summary="@string/auto_adjust_touch_summary"
+            android:defaultValue="false" />
+
+        <CheckBoxPreference
             android:key="wake_when_plugged_or_unplugged"
             android:title="@string/wake_when_plugged_or_unplugged_title"
             android:summary="@string/wake_when_plugged_or_unplugged_summary"
diff --git a/src/com/android/settings/DisplaySettings.java b/src/com/android/settings/DisplaySettings.java
index bb445cb..ae8c716 100644
--- a/src/com/android/settings/DisplaySettings.java
+++ b/src/com/android/settings/DisplaySettings.java
@@ -51,6 +51,7 @@ import com.android.settings.cyanogenmod.DisplayRotation;
 import com.android.settings.Utils;
 
 import org.cyanogenmod.hardware.AdaptiveBacklight;
+import org.cyanogenmod.hardware.HighTouchSensitivity;
 
 import java.util.ArrayList;
 
@@ -68,6 +69,7 @@ public class DisplaySettings extends SettingsPreferenceFragment implements
     private static final String KEY_DISPLAY_ROTATION = "display_rotation";
     private static final String KEY_LOCKSCREEN_ROTATION = "lockscreen_rotation";
     private static final String KEY_ADAPTIVE_BACKLIGHT = "adaptive_backlight";
+    private static final String KEY_AUTO_ADJUST_TOUCH = "auto_adjust_touch";
     private static final String KEY_WAKE_WHEN_PLUGGED_OR_UNPLUGGED = "wake_when_plugged_or_unplugged";
 
     private static final String CATEGORY_LIGHTS = "lights_prefs";
@@ -97,6 +99,7 @@ public class DisplaySettings extends SettingsPreferenceFragment implements
     private Preference mWifiDisplayPreference;
 
     private CheckBoxPreference mAdaptiveBacklight;
+    private CheckBoxPreference mHighTouchSensitivity;
 
     private PreferenceScreen mNotificationPulse;
     private PreferenceScreen mBatteryPulse;
@@ -171,6 +174,12 @@ public class DisplaySettings extends SettingsPreferenceFragment implements
             mAdaptiveBacklight = null;
         }
 
+        mHighTouchSensitivity = (CheckBoxPreference) findPreference(KEY_AUTO_ADJUST_TOUCH);
+        if (!isHighTouchSensitivitySupported()) {
+            getPreferenceScreen().removePreference(mHighTouchSensitivity);
+            mHighTouchSensitivity = null;
+        }
+
         if (!res.getBoolean(com.android.internal.R.bool.config_screenOffAnimation)) {
             getPreferenceScreen().removePreference(
                     findPreference(Settings.System.SCREEN_OFF_ANIMATION));
@@ -466,6 +475,8 @@ public class DisplaySettings extends SettingsPreferenceFragment implements
             return true;
         } else if (preference == mAdaptiveBacklight) {
             return AdaptiveBacklight.setEnabled(mAdaptiveBacklight.isChecked());
+        } else if (preference == mHighTouchSensitivity) {
+            return HighTouchSensitivity.setEnabled(mHighTouchSensitivity.isChecked());
         }
 
         return super.onPreferenceTreeClick(preferenceScreen, preference);
@@ -528,6 +539,16 @@ public class DisplaySettings extends SettingsPreferenceFragment implements
                 Log.d(TAG, "Adaptive backlight settings restored.");
             }
         }
+
+        if (isHighTouchSensitivitySupported()) {
+            final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(ctx);
+            final boolean enabled = prefs.getBoolean(KEY_AUTO_ADJUST_TOUCH, false);
+            if (!HighTouchSensitivity.setEnabled(enabled)) {
+                Log.e(TAG, "Failed to restore high touch sensitivity settings.");
+            } else {
+                Log.d(TAG, "High touch sensitivity settings restored.");
+            }
+        }
     }
 
     private static boolean isAdaptiveBacklightSupported() {
@@ -538,4 +559,13 @@ public class DisplaySettings extends SettingsPreferenceFragment implements
             return false;
         }
     }
+
+    private static boolean isHighTouchSensitivitySupported() {
+        try {
+            return HighTouchSensitivity.isSupported();
+        } catch (NoClassDefFoundError e) {
+            // Hardware abstraction framework not installed
+            return false;
+        }
+    }
 }
-- 
1.8.4

