From c3e4b9e6c2021b4d20014203b25b0535e2ced57b Mon Sep 17 00:00:00 2001
From: Xiao-Long Chen <chenxiaolong@cxl.epac.to>
Date: Tue, 27 Aug 2013 21:02:57 -0400
Subject: [PATCH] Add preferences for high touch sensitivity

Change-Id: Iee82ef0bce3ec68c347ae8c3063fa715d8015e9f
---
 res/xml/display_settings.xml                  |  6 ++++++
 src/com/android/settings/DisplaySettings.java | 30 +++++++++++++++++++++++++++
 2 files changed, 36 insertions(+)

diff --git a/res/xml/display_settings.xml b/res/xml/display_settings.xml
index df89d6c..955881b 100644
--- a/res/xml/display_settings.xml
+++ b/res/xml/display_settings.xml
@@ -102,6 +102,12 @@
             android:summary="@string/adaptive_backlight_summary"
             android:defaultValue="true" />
 
+        <CheckBoxPreference
+            android:key="auto_adjust_touch"
+            android:title="@string/auto_adjust_touch_title"
+            android:summary="@string/auto_adjust_touch_summary"
+            android:defaultValue="false" />
+
         <PreferenceCategory
             android:key="lights_prefs"
             android:title="@string/lights_category_title">
diff --git a/src/com/android/settings/DisplaySettings.java b/src/com/android/settings/DisplaySettings.java
index a1361c4..b5fc859 100644
--- a/src/com/android/settings/DisplaySettings.java
+++ b/src/com/android/settings/DisplaySettings.java
@@ -56,6 +56,7 @@ import com.android.settings.DreamSettings;
 import com.android.settings.Utils;
 
 import org.cyanogenmod.hardware.AdaptiveBacklight;
+import org.cyanogenmod.hardware.HighTouchSensitivity;
 
 import java.util.ArrayList;
 
@@ -76,6 +77,7 @@ public class DisplaySettings extends SettingsPreferenceFragment implements
     private static final String KEY_SCREEN_SAVER = "screensaver";
     private static final String KEY_WIFI_DISPLAY = "wifi_display";
     private static final String KEY_ADAPTIVE_BACKLIGHT = "adaptive_backlight";
+    private static final String KEY_AUTO_ADJUST_TOUCH = "auto_adjust_touch";
     private static final String KEY_BATTERY_LIGHT = "battery_light";
     private static final String KEY_POWER_CRT_MODE = "system_power_crt_mode";
     private static final String KEY_POWER_CRT_SCREEN_OFF = "system_power_crt_screen_off";
@@ -110,6 +112,7 @@ public class DisplaySettings extends SettingsPreferenceFragment implements
     private int mAllowedRotationModes;
 
     private CheckBoxPreference mAdaptiveBacklight;
+    private CheckBoxPreference mHighTouchSensitivity;
 
     private boolean mIsCrtOffChecked = false;
 
@@ -197,6 +200,12 @@ public class DisplaySettings extends SettingsPreferenceFragment implements
             mAdaptiveBacklight = null;
         }
 
+        mHighTouchSensitivity = (CheckBoxPreference) findPreference(KEY_AUTO_ADJUST_TOUCH);
+        if (!isHighTouchSensitivitySupported()) {
+            getPreferenceScreen().removePreference(mHighTouchSensitivity);
+            mHighTouchSensitivity = null;
+        }
+
         boolean hasNotificationLed = res.getBoolean(
                 com.android.internal.R.bool.config_intrusiveNotificationLed);
         boolean hasBatteryLed = res.getBoolean(
@@ -480,6 +489,8 @@ public class DisplaySettings extends SettingsPreferenceFragment implements
             return true;
         } else if (preference == mAdaptiveBacklight) {
             return AdaptiveBacklight.setEnabled(mAdaptiveBacklight.isChecked());
+        } else if (preference == mHighTouchSensitivity) {
+            return HighTouchSensitivity.setEnabled(mHighTouchSensitivity.isChecked());
         }
         return super.onPreferenceTreeClick(preferenceScreen, preference);
     }
@@ -582,6 +593,16 @@ public class DisplaySettings extends SettingsPreferenceFragment implements
                 Log.d(TAG, "Adaptive backlight settings restored.");
             }
         }
+
+        if (isHighTouchSensitivitySupported()) {
+            final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(ctx);
+            final boolean enabled = prefs.getBoolean(KEY_AUTO_ADJUST_TOUCH, false);
+            if (!HighTouchSensitivity.setEnabled(enabled)) {
+                Log.e(TAG, "Failed to restore high touch sensitivity settings.");
+            } else {
+                Log.d(TAG, "High touch sensitivity settings restored.");
+            }
+        }
     }
 
     private static boolean isAdaptiveBacklightSupported() {
@@ -592,4 +613,13 @@ public class DisplaySettings extends SettingsPreferenceFragment implements
             return false;
         }
     }
+
+    private static boolean isHighTouchSensitivitySupported() {
+        try {
+            return HighTouchSensitivity.isSupported();
+        } catch (NoClassDefFoundError e) {
+            // Hardware abstraction framework not installed
+            return false;
+        }
+    }
 }
-- 
1.8.4

